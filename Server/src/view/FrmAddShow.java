/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Controller;
import domen.Hall;
import domen.Movie;
import domen.Show;
import java.sql.Date;
import java.sql.Time;
import java.text.ParseException;
import java.time.Instant;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author aleks
 */
public class FrmAddShow extends javax.swing.JDialog {
    
    private List<Movie> movies;
    private List<Hall> halls;

    /**
     * Creates new form FrmAddShow
     */
    public FrmAddShow(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        napuniCb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel3.setText("Date");

        jLabel4.setText("Time");

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));

        jButton1.setText("Add show");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Movie");

        jLabel2.setText("Hall");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(jTextField2)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Movie movie = movies.get(jComboBox1.getSelectedIndex());
        Hall hall = halls.get(jComboBox2.getSelectedIndex());
        java.util.Date d = java.util.Date.from(Instant.now());
        try {
            this.jFormattedTextField1.commitEdit();
            d = (java.util.Date) jFormattedTextField1.getValue();
        } catch (ParseException ex) {
            Logger.getLogger(FrmAddShow.class.getName()).log(Level.SEVERE, null, ex);
        }
        Date date = new Date(d.getTime());
        Time start = null;
        if(!jTextField2.getText().isEmpty()){
            String regex = "([01]?[0-9]|2[0-3]):[0-5][0-9]";
            Pattern p = Pattern.compile(regex);
            Matcher m = p.matcher(jTextField2.getText());
            if(m.matches()) start = Time.valueOf(jTextField2.getText()+":00");
            else {JOptionPane.showMessageDialog(this, "Wrong time input!!!");
            this.dispose();
            }
        }
        Time end = new Time(start.getTime()+ movie.getDuration().getTime() + 3600000);
        addShow(movie, hall, date, start, end);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAddShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAddShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAddShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAddShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmAddShow dialog = new FrmAddShow(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    private void napuniCb() {
        try {
            movies = Controller.getInstance().getAllMovies();
            halls = Controller.getInstance().getAllHalls();
            movies.forEach(m -> {
                jComboBox1.addItem(m.getName());
            });
            halls.forEach(h -> {
                jComboBox2.addItem(h.getName());
            });
        } catch (Exception ex) {
            Logger.getLogger(FrmAddShow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addShow(Movie movie, Hall hall, Date date, Time start, Time end) {
        try {
            List<Show> shows = Controller.getInstance().getAllShows(hall, date);
            boolean booked = false;
            for(Show s : shows ){
                if(start.getTime() <= s.getTimeEnd().getTime() && end.getTime() >= s.getTimeEnd().getTime()){
                    booked = true;
                    JOptionPane.showMessageDialog(this, "Allready booked!");
                    this.dispose();
                    return;
                    
                }
                if(start.getTime() <= s.getTimeStart().getTime() && end.getTime() >= s.getTimeStart().getTime()){
                    JOptionPane.showMessageDialog(this, "Allready booked!");
                    booked = true;
                    this.dispose();
                    return;
                }
            };
            
            if (booked == false) {
                Show show = new Show(Long.MIN_VALUE, movie.getIdMovie(), hall.getIdHall(), date, start, end, hall.getCapacity(), hall.getName());
                System.out.println(show.getTimeEnd());
                try {
                    Controller.getInstance().addShow(show);
                    JOptionPane.showMessageDialog(this, "SUCCESS");
                } catch (Exception ex) {
                    Logger.getLogger(FrmAddShow.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.dispose();
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmAddShow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
